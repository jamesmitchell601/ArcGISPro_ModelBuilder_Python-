# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2023-07-03 07:28:53
Improved and updated by James Mitchell
"""

# The purpose of this script is to add new DEM and DSM files to the existing
# model representing ponderosa pine trees >= 21" DBH within Malheur National
# Forest proclaimed boundaries. The existing model was created by extracting
# mosaicked canopy model data from a State of Oregon Department of Geology and
# Mineral Industries web server (https://gis.dogami.oregon.gov/arcgis/rest/
# services/lidar/CANOPY_HEIGHT_MODEL_MOSAIC/ImageServer.

# This is a draft that will be updated when the workflow of the original model
# is finalized. Various polygon aggregation methods are being explored to
# determine the most accurate way to represent the data. Still need to test.


import arcpy
from arcpy.ia import *
from arcpy.sa import *


def MalheurPoderosaModaddData():  

    # To allow overwriting outputs change overwriteOutput option to True 
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")
    arcpy.CheckOutExtension("3D")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\
    toolboxes\GeoAnalytics Desktop Tools.tbx")

    # If multiple DSM files, then merge them together. Else, input directly
    # into raster calculator below and comment out this 
    # Process: Mosaic To New Raster (management)
    New_DSM = arcpy.management.MosaicToNewRaster(input_rasters=[],
    output_location="", raster_dataset_name_with_extension="New_DSM.tif",
    coordinate_system_for_the_raster=
    ("PROJCS[\"NAD_1983_Oregon_Statewide_Lambert_Feet_Intl\", 
    GEOGCS[\"GCS_North_American_1983\",DATUM[\"D_North_American_1983\", 
    SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0], 
    UNIT[\"Degree\",0.0174532925199433]],
    PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",
    1312335.958005249],PARAMETER[\"False_Northing\",0.0],
    PARAMETER[\"Central_Meridian\",-120.5],
    PARAMETER[\"Standard_Parallel_1\",43.0],PARAMETER[\"Standard_Parallel_2\",
    45.5],PARAMETER[\"Latitude_Of_Origin\",41.75],UNIT[\"Foot\",0.3048]]",
    number_of_bands=None)[0]) 
    New_DSM = arcpy.Raster(New_DSM)

    # If multiple DEM files, then merge them together. Else, input directly
    # into raster calculator below and comment out this process
    # Process: Mosaic To New Raster(management)
    New_DEM = arcpy.management.MosaicToNewRaster(input_rasters=[],
    output_location="", raster_dataset_name_with_extension="",
    number_of_bands=None)[0]
    New_DEM = arcpy.Raster(New_DEM)

    # Create new canopy model by subtracting the DEM from its corresponding DSM
    # Process: Raster Calculator (sa)   
    new_canopymod = "D:\\Wild\\Wild.gdb\\new_canopymod"
    Raster_Calculator = new_canopymod
    new_canopymod =  New_DSM - New_DEM
    new_canopymod.save(Raster_Calculator)


    # Extract raster values >= 81' and < 250' from the canopy model to create
    # raster with cells represting ponderosa pine trees >= 21" DBH. 81' was
    # selected as the low cutoff based on height-diameter relationship
    # guidance from the USFS Forest Vegetation Simulator documentation. 250'
    # was selected as the high cutoff to exclude impossibly tall trees created
    # from noise in the original lidar. 
    # Process: Extract by Attributes (sa)
    pondo_heightmod_81_250_1 = "D:\\Wild\\Wild.gdb\\pondo_heightmod_81_250_1"
    Extract_by_Attributes_1 = pondo_heightmod_81_250_1
    pondo_heightmod_81_250_1 = arcpy.sa.ExtractByAttributes(new_canopymod,
    "VALUE >= 81 And VALUE < 250")
    pondo_heightmod_81_250_1.save(Extract_by_Attributes_1)

    # Convert raster to integer for Raster to Polygon tool input.
    # Process: Int (3d)
    Output_raster = "D:\\Wild\\Wild.gdb\\pondo_heightmod_81_250_1"
    arcpy.ddd.Int(in_raster_or_constant=pondo_heightmod_81_250_1,
    out_raster=Output_raster)
    Output_raster = arcpy.Raster(Output_raster)

    # Convert raster to Polygon to improve data visualization.
    # Process: Raster to Polygon (conversion)
    Output_polygon_features_1 = "D:\\Wild\\Wild.gdb\\RasterT_Int_pon1"
    arcpy.conversion.RasterToPolygon(in_raster=Output_raster,
    out_polygon_features=Output_polygon_features_1)

    # Aggregate polygons to simplify dataset and reduce total number of
    # features. A buffering process will likely be adding before this to
    # improve output polygon aesthetics.
    # Process: Aggregate Polygons (cartography)
    RasterT_Int_po_AggregatePoly = "D:\\Wild\\Wild.gdb\\
    RasterT_Int_po_AggregatePoly"
    RasterT_Int_po_AggregatePoly_Tbl = "D:\\Wild\\Wild.gdb\\
    RasterT_Int_po_AggregatePoly_Tbl"
    arcpy.cartography.AggregatePolygons(in_features=Output_polygon_features_1,
    out_feature_class=RasterT_Int_po_AggregatePoly,
    aggregation_distance="100 Feet", minimum_area="2640 SquareFeetUS",
    minimum_hole_size="500 SquareFeetUS",
    out_table=RasterT_Int_po_AggregatePoly_Tbl)

    # Add existing Malheur ponderosa pine >= 21" DBH model below to
    # Output_Dataset and target_layer, creating a new model with the new data
    # Process: Join Features (gapro)
    Output_Dataset = "D:\\Wild\\Wild.gdb\\
    RasterT_Int_Ma_AggregatePoly_JoinFeatures"
    arcpy.gapro.JoinFeatures(target_layer="",
    join_layer=RasterT_Int_po_AggregatePoly, output=Output_Dataset,
    join_operation="JOIN_ONE_TO_ONE")


if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="D:\\Wild\\Wild.gdb", 
    workspace="D:\\Wild\\Wild.gdb"):
        MalheurPoderosaModaddData()
